<?php

/**
 * @file
 * Install, update and uninstall functions for the Hotlinks Star Trek module.
 */

use Drupal\taxonomy\Entity\Term;
use Drupal\taxonomy\Entity\Vocabulary;

/**
 * Implements hook_install().
 */
function hotlinks_startrek_install() {
  // Add a small delay to ensure dependencies are fully loaded
  drupal_register_shutdown_function('_hotlinks_startrek_delayed_install');
}

/**
 * Delayed install function to create Star Trek categories.
 */
function _hotlinks_startrek_delayed_install() {
  // Ensure the main hotlinks module is fully installed first
  if (!\Drupal::moduleHandler()->moduleExists('hotlinks')) {
    \Drupal::messenger()->addError(t('Hotlinks module must be installed and enabled before installing Star Trek categories.'));
    return;
  }

  // Clear caches to ensure all entity definitions are available
  \Drupal::entityTypeManager()->clearCachedDefinitions();
  \Drupal::service('entity_field.manager')->clearCachedFieldDefinitions();
  
  // Check if hotlink_categories vocabulary exists
  $vocabulary = \Drupal::entityTypeManager()
    ->getStorage('taxonomy_vocabulary')
    ->load('hotlink_categories');

  if (!$vocabulary) {
    \Drupal::logger('hotlinks_startrek')->error('Hotlinks vocabulary not found. Main Hotlinks module may not be properly installed.');
    \Drupal::messenger()->addError(t('Hotlinks vocabulary not found. Please ensure the main Hotlinks module is properly installed, then try enabling this module again.'));
    return;
  }

  // Create Star Trek Wormhole categories structure
  $categories = [
    'Star Trek Communities' => [
      'description' => 'Connect with fellow fans through chat rooms, fan clubs, and discussion forums.',
      'subcategories' => [
        'Chat rooms',
        'Fanclubs', 
        'Forums',
      ],
    ],
    'Star Trek Fandom' => [
      'description' => 'Fan-created content including conventions, fiction, humor, and artistic works.',
      'subcategories' => [
        'Conventions',
        'Fan Fiction',
        'Humor',
        'Fan Art',
        'Fan Sites',
      ],
    ],
    'Star Trek Games' => [
      'description' => 'Video games and interactive entertainment across all gaming platforms.',
      'subcategories' => [
        'PC Games',
        'XBox Games',
        'Playstation Games',
        'Mobile Games',
        'Online Games',
      ],
    ],
    'Star Trek International' => [
      'description' => 'Star Trek resources and communities in languages other than English.',
      'subcategories' => [
        'German',
        'Italian',
        'Dutch',
        'French',
        'Spanish',
        'Other Languages',
      ],
    ],
    'Star Trek News' => [
      'description' => 'Latest news, updates, and commentary about Star Trek from various sources.',
      'subcategories' => [
        'E-Zines',
        'News Sites',
        'Blogs',
        'Podcasts',
      ],
    ],
    'Star Trek Official' => [
      'description' => 'Official CBS and Paramount websites and authorized content.',
      'subcategories' => [
        'CBS',
        'Paramount',
        'Official Sites',
      ],
    ],
    'Star Trek Reference' => [
      'description' => 'Comprehensive databases, guides, and reference materials for all things Star Trek.',
      'subcategories' => [
        'Aliens',
        'Characters and Actors',
        'Index Sites',
        'Episode Guides',
        'Technical Manuals',
        'Memory Alpha/Beta',
      ],
    ],
    'Star Trek Role Playing' => [
      'description' => 'Interactive role-playing games, simulations, and character development communities.',
      'subcategories' => [
        'Chat',
        'Forum',
        'Email',
        'Fleet Databases',
        'Character Databases',
      ],
    ],
    'Star Trek Services' => [
      'description' => 'Web services, tools, and resources for Star Trek website owners and fans.',
      'subcategories' => [
        'Banner Exchanges',
        'Webrings',
        'Hosting',
        'Tools',
      ],
    ],
    'Star Trek Shopping' => [
      'description' => 'Purchase official and licensed Star Trek merchandise, collectibles, and media.',
      'subcategories' => [
        'Apparel',
        'Books',
        'Collectibles',
        'DVDs/Blu-ray',
        'Models',
      ],
    ],
    'Star Trek Universe' => [
      'description' => 'Content organized by specific Star Trek series, movies, and eras.',
      'subcategories' => [
        'TOS',
        'TAS',
        'TNG',
        'DS9',
        'VOY',
        'ENT',
        'DIS',
        'PIC',
        'SNW',
        'LD',
        'PRO',
        'Movies',
      ],
    ],
  ];

  $created_count = 0;
  $errors = [];

  foreach ($categories as $parent_name => $category_data) {
    try {
      // Check if parent category already exists
      $existing_parent = \Drupal::entityTypeManager()
        ->getStorage('taxonomy_term')
        ->loadByProperties([
          'vid' => 'hotlink_categories',
          'name' => $parent_name,
        ]);

      if (empty($existing_parent)) {
        // Create parent category with description
        $parent_term = Term::create([
          'vid' => 'hotlink_categories',
          'name' => $parent_name,
          'description' => [
            'value' => $category_data['description'],
            'format' => 'basic_html',
          ],
          'parent' => [],
        ]);
        $parent_term->save();
        $created_count++;

        // Create subcategories
        foreach ($category_data['subcategories'] as $subcategory_name) {
          try {
            $existing_child = \Drupal::entityTypeManager()
              ->getStorage('taxonomy_term')
              ->loadByProperties([
                'vid' => 'hotlink_categories',
                'name' => $subcategory_name,
                'parent' => $parent_term->id(),
              ]);

            if (empty($existing_child)) {
              // Set description for Star Trek Universe subcategories
              $subcategory_description = '';
              if ($parent_name === 'Star Trek Universe') {
                $series_descriptions = [
                  'TOS' => 'The Original Series (1966-1969) - The classic series with Kirk, Spock, and McCoy.',
                  'TAS' => 'The Animated Series (1973-1974) - Animated continuation of TOS with the original cast.',
                  'TNG' => 'The Next Generation (1987-1994) - Set 100 years after TOS with Captain Picard and the Enterprise-D.',
                  'DS9' => 'Deep Space Nine (1993-1999) - Space station-based series focusing on politics, war, and religion.',
                  'VOY' => 'Voyager (1995-2001) - Lost in the Delta Quadrant with Captain Janeway and her crew.',
                  'ENT' => 'Enterprise (2001-2005) - Prequel series set before TOS with Captain Archer.',
                  'DIS' => 'Discovery (2017-present) - Modern series set before TOS focusing on the spore drive and Mirror Universe.',
                  'PIC' => 'Picard (2020-2023) - Sequel series following Jean-Luc Picard in his later years.',
                  'SNW' => 'Strange New Worlds (2022-present) - Captain Pike and the Enterprise crew before Kirk.',
                  'LD' => 'Lower Decks (2020-present) - Animated comedy series following lower-ranking Starfleet officers.',
                  'PRO' => 'Prodigy (2021-present) - Animated series aimed at younger audiences featuring a diverse crew.',
                  'Movies' => 'Star Trek films from The Motion Picture (1979) to the recent reboot series.',
                ];
                $subcategory_description = $series_descriptions[$subcategory_name] ?? '';
              }

              $child_term = Term::create([
                'vid' => 'hotlink_categories',
                'name' => $subcategory_name,
                'description' => [
                  'value' => $subcategory_description,
                  'format' => 'basic_html',
                ],
                'parent' => $parent_term->id(),
              ]);
              $child_term->save();
              $created_count++;
            }
          } catch (\Exception $e) {
            $errors[] = t('Failed to create subcategory "@name": @error', [
              '@name' => $subcategory_name,
              '@error' => $e->getMessage(),
            ]);
            \Drupal::logger('hotlinks_startrek')->error('Failed to create subcategory @name: @error', [
              '@name' => $subcategory_name,
              '@error' => $e->getMessage(),
            ]);
          }
        }
      } else {
        \Drupal::logger('hotlinks_startrek')->notice('Parent category "@name" already exists, skipping.', [
          '@name' => $parent_name,
        ]);
      }
    } catch (\Exception $e) {
      $errors[] = t('Failed to create parent category "@name": @error', [
        '@name' => $parent_name,
        '@error' => $e->getMessage(),
      ]);
      \Drupal::logger('hotlinks_startrek')->error('Failed to create parent category @name: @error', [
        '@name' => $parent_name,
        '@error' => $e->getMessage(),
      ]);
    }
  }

  // Report results
  if ($created_count > 0) {
    \Drupal::messenger()->addMessage(t('Star Trek categories have been added! Created @count new categories.', ['@count' => $created_count]));
    \Drupal::logger('hotlinks_startrek')->notice('Successfully created @count Star Trek categories.', ['@count' => $created_count]);
  } else {
    \Drupal::messenger()->addMessage(t('Star Trek categories appear to already exist. No new categories were created.'));
  }

  if (!empty($errors)) {
    foreach ($errors as $error) {
      \Drupal::messenger()->addError($error);
    }
  }

  // Clear taxonomy caches
  \Drupal::entityTypeManager()->getStorage('taxonomy_term')->resetCache();
  \Drupal::service('plugin.manager.menu.link')->rebuild();
}

/**
 * Implements hook_uninstall().
 */
function hotlinks_startrek_uninstall() {
  // Get all Star Trek categories
  $star_trek_categories = [
    'Star Trek Communities',
    'Star Trek Fandom', 
    'Star Trek Games',
    'Star Trek International',
    'Star Trek News',
    'Star Trek Official',
    'Star Trek Reference',
    'Star Trek Role Playing',
    'Star Trek Services',
    'Star Trek Shopping',
    'Star Trek Universe',
  ];

  $deleted_count = 0;
  foreach ($star_trek_categories as $category_name) {
    try {
      $terms = \Drupal::entityTypeManager()
        ->getStorage('taxonomy_term')
        ->loadByProperties([
          'vid' => 'hotlink_categories',
          'name' => $category_name,
        ]);

      foreach ($terms as $term) {
        // Get all child terms first
        $children = \Drupal::entityTypeManager()
          ->getStorage('taxonomy_term')
          ->loadChildren($term->id());
        
        // Delete children first
        foreach ($children as $child) {
          $child->delete();
          $deleted_count++;
        }
        
        // Then delete parent
        $term->delete();
        $deleted_count++;
      }
    } catch (\Exception $e) {
      \Drupal::logger('hotlinks_startrek')->error('Error deleting category @name: @error', [
        '@name' => $category_name,
        '@error' => $e->getMessage(),
      ]);
    }
  }

  if ($deleted_count > 0) {
    \Drupal::messenger()->addMessage(t('Removed @count Star Trek categories.', ['@count' => $deleted_count]));
  }
}

/**
 * Re-run install if categories weren't created during initial install.
 */
function hotlinks_startrek_update_8001() {
  // Check if any Star Trek categories exist
  $existing_terms = \Drupal::entityTypeManager()
    ->getStorage('taxonomy_term')
    ->loadByProperties([
      'vid' => 'hotlink_categories',
      'name' => 'Star Trek Communities',
    ]);

  if (empty($existing_terms)) {
    // No Star Trek categories found, run the install process
    \Drupal::logger('hotlinks_startrek')->notice('Re-running Star Trek categories installation...');
    _hotlinks_startrek_delayed_install();
    return t('Re-installed Star Trek categories that were missing from initial installation.');
  }

  return t('Star Trek categories already exist, no action needed.');
}

/**
 * Force create categories if they still don't exist.
 */
function hotlinks_startrek_update_8002() {
  // Force creation regardless of existing categories
  \Drupal::logger('hotlinks_startrek')->notice('Forcing Star Trek categories installation...');
  _hotlinks_startrek_delayed_install();
  return t('Forced Star Trek categories installation.');
}