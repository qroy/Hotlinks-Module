<?php

/**
 * @file
 * Enhanced hotlinks_reviews.module with better Star Trek integration.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function hotlinks_reviews_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.hotlinks_reviews':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Hotlinks Reviews submodule adds a Starfleet-approved rating and review system to your hotlinks, bringing the spirit of exploration and evaluation to your link directory.') . '</p>';
      $output .= '<h3>' . t('Features') . '</h3>';
      $output .= '<ul>';
      $output .= '<li>' . t('Starfleet Command rating system (1-5 stars)') . '</li>';
      $output .= '<li>' . t('Away team reports (text reviews)') . '</li>';
      $output .= '<li>' . t('Starfleet approval badges for excellence') . '</li>';
      $output .= '<li>' . t('Bridge officer moderation system') . '</li>';
      $output .= '<li>' . t('Full integration with Star Trek Wormhole categories') . '</li>';
      $output .= '</ul>';
      return $output;
  }
}

/**
 * Implements hook_theme().
 */
function hotlinks_reviews_theme() {
  return [
    'hotlinks_rating_stars' => [
      'variables' => [
        'rating' => 0,
        'count' => 0,
        'max_rating' => 5,
        'compact' => FALSE,
        'interactive' => FALSE,
        'attributes' => [],
        'star_trek_theme' => TRUE,
      ],
      'template' => 'hotlinks-rating-stars',
    ],
    'hotlinks_rating_widget' => [
      'variables' => [
        'rating' => 0,
        'max_rating' => 5,
        'name' => '',
        'star_trek_labels' => FALSE,
      ],
      'template' => 'hotlinks-rating-widget',
    ],
    'hotlinks_review_summary' => [
      'variables' => [
        'average_rating' => 0,
        'total_reviews' => 0,
        'rating_breakdown' => [],
        'starfleet_approved' => FALSE,
      ],
      'template' => 'hotlinks-review-summary',
    ],
    'hotlinks_starfleet_badge' => [
      'variables' => [
        'rating' => 0,
        'badge_type' => 'approved',
        'link_title' => '',
      ],
      'template' => 'hotlinks-starfleet-badge',
    ],
  ];
}

/**
 * Enhanced form alter with Star Trek context.
 */
function hotlinks_reviews_form_node_hotlink_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  _hotlinks_reviews_alter_hotlink_form($form, $form_state);
}

function hotlinks_reviews_form_node_hotlink_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  _hotlinks_reviews_alter_hotlink_form($form, $form_state);
}

/**
 * Enhanced form alteration with Star Trek theming.
 */
function _hotlinks_reviews_alter_hotlink_form(&$form, FormStateInterface $form_state) {
  $current_user = \Drupal::currentUser();
  $config = \Drupal::config('hotlinks.settings');
  
  if (!$current_user->hasPermission('rate hotlinks') && !$current_user->hasPermission('review hotlinks')) {
    if (isset($form['field_hotlink_rating'])) {
      $form['field_hotlink_rating']['#access'] = FALSE;
    }
    if (isset($form['field_hotlink_review'])) {
      $form['field_hotlink_review']['#access'] = FALSE;
    }
    return;
  }

  // Enhanced descriptions with Star Trek flavor
  if (isset($form['field_hotlink_rating'])) {
    $use_trek_labels = $config->get('use_star_trek_labels');
    $description = $use_trek_labels ? 
      t('Rate this resource according to Starfleet evaluation standards (1-5 stars).') :
      t('Rate this link from 1 (poor) to 5 (excellent) stars.');
    
    $form['field_hotlink_rating']['widget']['#description'] = $description;
    $form['field_hotlink_rating']['widget']['#star_trek_labels'] = $use_trek_labels;
  }

  if (isset($form['field_hotlink_review'])) {
    $description = $config->get('use_star_trek_labels') ?
      t('Submit your away team report on this resource. What makes it valuable for future missions?') :
      t('Share your thoughts about this link. What makes it useful or noteworthy?');
    
    $form['field_hotlink_review']['widget']['#description'] = $description;
    
    if ($config->get('require_review_text')) {
      $form['field_hotlink_review']['widget'][0]['value']['#required'] = TRUE;
    }
  }

  $form['#validate'][] = '_hotlinks_reviews_validate_review';
  $form['#attached']['library'][] = 'hotlinks_reviews/rating-widget';
  
  // Add Star Trek styling context
  $form['#attached']['drupalSettings']['hotlinksReviews'] = [
    'useStarTrekLabels' => $config->get('use_star_trek_labels'),
    'starfleetApproval' => $config->get('starfleet_approval'),
  ];
}

/**
 * Enhanced validation with Star Trek context.
 */
function _hotlinks_reviews_validate_review(&$form, FormStateInterface $form_state) {
  $config = \Drupal::config('hotlinks.settings');
  $rating = $form_state->getValue('field_hotlink_rating');
  $review = $form_state->getValue('field_hotlink_review');

  if ($config->get('require_review_text') && !empty($rating[0]['value'])) {
    if (empty($review[0]['value'])) {
      $message = $config->get('use_star_trek_labels') ?
        t('A mission report is required when you provide a Starfleet evaluation.') :
        t('A review is required when you provide a rating.');
      $form_state->setErrorByName('field_hotlink_review', $message);
    }
  }

  $min_rating = $config->get('min_rating_for_display') ?: 1;
  if (!empty($rating[0]['value']) && $rating[0]['value'] < $min_rating) {
    $form_state->setErrorByName('field_hotlink_rating', t('Rating must be at least @min stars.', ['@min' => $min_rating]));
  }
}

/**
 * Enhanced entity presave with better integration.
 */
function hotlinks_reviews_entity_presave(EntityInterface $entity) {
  if ($entity->getEntityTypeId() == 'node' && $entity->bundle() == 'hotlink') {
    _hotlinks_reviews_update_aggregates($entity);
    _hotlinks_reviews_update_starfleet_status($entity);
  }
}

/**
 * Enhanced node view with Star Trek integration.
 */
function hotlinks_reviews_node_view(array &$build, EntityInterface $entity, $view_mode, $langcode) {
  if ($entity->getEntityTypeId() == 'node' && $entity->bundle() == 'hotlink') {
    $config = \Drupal::config('hotlinks.settings');
    
    if ($view_mode == 'full') {
      $avg_rating = $entity->get('field_hotlink_avg_rating')->value ?: 0;
      $review_count = $entity->get('field_hotlink_review_count')->value ?: 0;
      
      $build['review_summary'] = [
        '#theme' => 'hotlinks_review_summary',
        '#average_rating' => $avg_rating,
        '#total_reviews' => $review_count,
        '#rating_breakdown' => _hotlinks_reviews_get_rating_breakdown($entity->id()),
        '#starfleet_approved' => $avg_rating >= 4.0 && $config->get('starfleet_approval'),
        '#weight' => 3,
        '#cache' => ['tags' => ['node:' . $entity->id()]],
      ];
      
      // Add Starfleet badge for highly rated content
      if ($avg_rating >= 4.0 && $config->get('starfleet_approval')) {
        $build['starfleet_badge'] = [
          '#theme' => 'hotlinks_starfleet_badge',
          '#rating' => $avg_rating,
          '#badge_type' => $avg_rating >= 4.5 ? 'exemplary' : 'approved',
          '#link_title' => $entity->getTitle(),
          '#weight' => 2,
        ];
      }
    }

    $build['#attached']['library'][] = 'hotlinks_reviews/rating-display';
  }
}

/**
 * Update Starfleet approval status based on ratings.
 */
function _hotlinks_reviews_update_starfleet_status(EntityInterface $entity) {
  $avg_rating = $entity->get('field_hotlink_avg_rating')->value ?: 0;
  $config = \Drupal::config('hotlinks.settings');
  
  if ($config->get('starfleet_approval') && $avg_rating >= 4.0) {
    // Add to approved links list for potential featured display
    $approved_links = \Drupal::state()->get('hotlinks_reviews.starfleet_approved', []);
    $approved_links[$entity->id()] = [
      'rating' => $avg_rating,
      'title' => $entity->getTitle(),
      'timestamp' => \Drupal::time()->getRequestTime(),
    ];
    \Drupal::state()->set('hotlinks_reviews.starfleet_approved', $approved_links);
  }
}

/**
 * Enhanced aggregate updates with better statistics.
 */
function _hotlinks_reviews_update_aggregates(EntityInterface $entity) {
  $rating_field = $entity->get('field_hotlink_rating');

  if (!$rating_field->isEmpty()) {
    $node_id = $entity->id();
    $ratings = \Drupal::state()->get('hotlinks_reviews.ratings', []);
    
    if (isset($ratings[$node_id])) {
      $total = 0;
      $count = 0;
      
      foreach ($ratings[$node_id] as $user_rating) {
        $total += $user_rating['rating'];
        $count++;
      }
      
      $new_avg = $count > 0 ? round($total / $count, 2) : 0;
      $entity->set('field_hotlink_avg_rating', $new_avg);
      $entity->set('field_hotlink_review_count', $count);
    }
  }
}

/**
 * Enhanced rating breakdown with additional statistics.
 */
function _hotlinks_reviews_get_rating_breakdown($node_id) {
  $ratings = \Drupal::state()->get('hotlinks_reviews.ratings', []);
  $breakdown = [5 => 0, 4 => 0, 3 => 0, 2 => 0, 1 => 0];
  
  if (isset($ratings[$node_id])) {
    foreach ($ratings[$node_id] as $user_rating) {
      $rating = $user_rating['rating'];
      if ($rating >= 1 && $rating <= 5) {
        $breakdown[$rating]++;
      }
    }
  }
  
  return $breakdown;
}

/**
 * Get Star Trek themed rating labels.
 */
function hotlinks_reviews_get_star_trek_labels() {
  return [
    1 => t('Avoid - Hostile Territory'),
    2 => t('Caution - Proceed with Awareness'),
    3 => t('Serviceable - Standard Resource'),
    4 => t('Recommended - Valuable Asset'),
    5 => t('Essential - Starfleet Priority'),
  ];
}

/**
 * Integration with main Hotlinks controller for category displays.
 */
function hotlinks_reviews_hotlinks_category_alter(&$build, $category) {
  $config = \Drupal::config('hotlinks.settings');
  
  if ($config->get('starfleet_approval')) {
    // Add badge indicators to category listings
    $approved_links = \Drupal::state()->get('hotlinks_reviews.starfleet_approved', []);
    
    if (!empty($approved_links)) {
      $build['starfleet_notice'] = [
        '#markup' => '<p class="starfleet-notice">' . 
          t('🖖 @count resources in this category have received Starfleet approval.', [
            '@count' => count($approved_links)
          ]) . '</p>',
        '#weight' => -10,
      ];
    }
  }
}

/**
 * Helper function to check user rating permissions with Star Trek context.
 */
function hotlinks_reviews_user_can_rate($node_id, $user_id = NULL) {
  $user = $user_id ? \Drupal\user\Entity\User::load($user_id) : \Drupal::currentUser();
  $config = \Drupal::config('hotlinks.settings');

  if (!$user->hasPermission('rate hotlinks')) {
    return FALSE;
  }

  if ($user->isAnonymous() && !$config->get('allow_anonymous_reviews')) {
    return FALSE;
  }

  if (!$config->get('allow_review_updates') && hotlinks_reviews_get_user_rating($node_id, $user->id())) {
    return FALSE;
  }

  return TRUE;
}

/**
 * Get user's existing rating.
 */
function hotlinks_reviews_get_user_rating($node_id, $user_id) {
  $ratings = \Drupal::state()->get('hotlinks_reviews.ratings', []);
  
  if (isset($ratings[$node_id][$user_id])) {
    return $ratings[$node_id][$user_id]['rating'];
  }
  
  return NULL;
}